 import numpy as np
 from sklearn.preprocessing import StandardScaler
 import matplotlib.pyplot as plt
 from sklearn.decomposition import PCA
 from sklearn.datasets import load_iris
 # Load dataset
 iris = load_iris()
 x = iris.data
 y = iris.target
 # Standardize the data
 x_std = (x - np.mean(x, axis=0)) / np.std(x, axis=0)
 # Compute the covariance matrix
 cov_matrix = np.cov(x_std, rowvar=False)
 print("Covariance Matrix:\n", cov_matrix)
 # Compute eigenvalues and eigenvectors
 eigenvalues, eigenvectors = np.linalg.eig(cov_matrix)
 print("\nEigenvalues:\n", eigenvalues)
 print("\nEigenvectors:\n", eigenvectors)
 # Apply PCA
 pca = PCA(n_components=2)
 x_pca = pca.fit_transform(x_std)
 # Plot the PCA-transformed data
 plt.figure(figsize=(8, 6))
 for target, color in zip(range(3), ('r', 'g', 'b')):
 plt.scatter(x_pca[y == target, 0], x_pca[y == target, 1], color=color, label=iris.target_names[target])
 plt.legend()
 plt.xlabel('First Principal Component')
 plt.ylabel('Second Principal Component')
 plt.title('PCA of Iris Dataset')
 plt.grid(True)
 plt.show()
