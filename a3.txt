 import numpy as np
 import matplotlib.pyplot as plt
 # Data points (X) and initial centers (C)
 X = np.array([[5.9, 3.2], [4.6, 2.9], [6.2, 2.8], [4.7, 3.2],
              [5.5, 4.2], [5.0, 3.0], [4.9, 3.1], [6.7, 3.1],
              [5.1, 3.8], [6.0, 3.0]])
 C = np.array([[6.2, 3.2], [6.6, 3.7], [6.5, 3.0]])  # Initial centers
 colors = ['r', 'g', 'b']
 for i in range(100):
    D = np.sqrt(((X[:, None] - C)**2).sum(axis=2))  # Distance from each point to each cluster
    L = np.argmin(D, axis=1)  # Cluster assignment
    new_c = np.array([X[L == k].mean(axis=0) for k in range(3)])
    # Plotting
    for k in range(3):
        cluster_points = X[L == k]
        plt.scatter(cluster_points[:, 0], cluster_points[:, 1], color=colors[k], label=f"Cluster {k+1}")
        plt.scatter(C[k, 0], C[k, 1], color=colors[k], marker='P')
    plt.title(f"K-Means Iteration {i+1}")
    plt.xlabel("X1")
    plt.ylabel("X2")
    plt.legend()
    plt.show()
    if np.allclose(C, new_c):
        print(f"Converged in {i+1} iterations")
        break
    C = new_c
    if i == 0:
print(f"After 1st iteration (red):   {np.round(C[0], 3)}")
 if i == 1:
 print(f"After 2nd iteration (green): {np.round(C[1], 3)}")
 print(f"Final center (blue): {np.round(C[2], 3)}")
